Problem Statement

An Oldest API
A company has a number of mobile apps that they sell to customers, and each app uses one or more 
REST APIs. All REST APIs are given version numbers like v1, v2, v3, ... etc. 
which are incremented each time the REST API team releases a new version of the API to the app teams.

Consider a file input.txt which contains information about which versions of the various APIs 
are being used by the current release of each app of the company:

---------  Input file ------------------------------

Mail App, Authentication API, v6
Video Call App, Authentication API, v7
Mail App, Data Storage API, v10
Chat App, Data Storage API, v11
Mail App, Search API, v6
Chat App, Authentication API, v8
Chat App, Presence API, v2
Video Call App, Data Storage API, v11
Video Call App, Video Compression API, v3

------------  end of file -------------------------------

Each line of this file consists of 3 comma-separated fields. The first field is a app name, 
the second field is a API name, and the third field is the API version number used by that app. 
The example given above indicates that the Mail App, uses version v6 of the Authentication API, 
and the Video Call App uses version v7 of the Authentication API, and the Mail App also uses version v10 
of the Data Storage API, and so on. For the purposes of this program, assume that all version numbers 
are of the form v<digits> where <digits> represents one or more decimal digits.

Write a Java program that reads this file, figures out which is the oldest version number of each API, 
and then prints the names of apps which are using the oldest version of at least one API. 
Special Note: if a API has only one version, then that version is not considered an oldest version.

Thus, in case of the example input given above, the output of your program should be:

------------------ Output ----------------

Mail App

---------------------------------------

because Mail App is using the oldest version of the Authentication API as well as the Data Storage API. 
Please read the example carefully to understand exactly what you're expected to do.

Important notes:

1) Please make sure that your program contains a public class Main, and this class must contain the 
public static void main method. Also, do not include a package declaration in your code. 
Your program must read input from input.txt and write output to output.txt (both in the current directory)
2) To make things easier for you, we have already written a starter program which reads input.txt 
line-by-line, and does nothing. It simply prints the number of lines to output.txt. 
You need to just modify this program to do the required processing, and change what is printed 
to output.txt as shown above.
3) You must write your program in a single file, and copy-paste the program below. In case you want 
to write a program with multiple-classes, use inner classes.